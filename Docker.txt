from flask import Flask, jsonify

from datetime import datetime

import socket
 
app = Flask(__name__)
 
@app.route('/')

def get_time():

    timestamp = datetime.utcnow().strftime('%Y-%m-%d %H:%M:%S')

    ip = socket.gethostbyname(socket.gethostname())

    return jsonify({"timestamp": timestamp, "ip": ip})
 
if __name__ == '__main__':

    app.run(host='0.0.0.0', port=5000)

 
Flask==2.2.2

 
le to specify the dependencies
 
file to specify the dependencies:
 
# Use a minimal base image (Python 3.9 slim version)

FROM python:3.9-slim
 
# Create a non-root user and set it as the default user

RUN adduser --disabled-password simpleuser

USER simpleuser
 
# Set the working directory inside the container

WORKDIR /app
 
# Copy the requirements file into the container

COPY requirements.txt .
 
# Install the dependencies

RUN pip install --no-cache-dir -r requirements.txt
 
# Copy the application code into the container

COPY app.py .
 
# Expose the port the app will run on

EXPOSE 5000
 
# Run the application

CMD ["python", "app.py"]

 
docker build -t simple-time-service .

 
"docker build" requires exactly 1 argument.

See 'docker build --help'.
 
Usage:  docker build [OPTIONS] PATH | URL | -
 
Build an image from a Dockerfile
 
16:13â€ƒMeeting ended: 32m 11s 

 
murali left the chat.

 
murali was invited to the meeting.

 
# Use a minimal base image (Python 3.9 slim version)

FROM python:3.9-slim
 
# Create a non-root user and set it as the default user

RUN adduser --disabled-password simpleuser

USER simpleuser
 
# Set the working directory inside the container

WORKDIR /app
 
# Copy the requirements file into the container

COPY requirements.txt .
 
# Install the dependencies

RUN pip install --no-cache-dir -r requirements.txt
 
# Copy the application code into the container

COPY app.py .
 
# Expose the port the app will run on

EXPOSE 5000
 
# Run the application

CMD ["python", "app.py"]
 